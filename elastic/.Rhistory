library(request)
api('http://localhost:9200')
api('localhost/9200')
api(':9200')
api('9200')
api('api.github.com') %>%
api_path(orgs, ropensci, events) %>%
peep()
api("stuff.com")
api_path(api("stuff.com"), the, red, fox)
library(request)
api('http://localhost:9200')
api('http://localhost:9200')
api('localhost/9200')
library(request)
api('http://localhost:9200')
api(':9200')
api('9200')
api('9200')
api('api.github.com')
api('api.github.com') %>%
api_path(orgs, ropensci, events) %>%
peep()
api("stuff.com")
api_path(api("stuff.com"), the, red, fox)
x <- list(user = 'a', repo = 'b')
x
api_template('{{user}}/{{repo}}/', x)
api_query(api("stuff.com"), q = ecology, wt = json)
'httpbin.org/get' %>% api()
api('httpbin.org/get')
http(api('httpbin.org/get'))
'httpbin.org/get' %>% api()
api('httpbin.org/get')
api('httpbin.org/get') %>% http()
api('http://httpbin.org/post') %>%
api_body(foo = 'bar')
api('api.github.com') %>%
api_path(orgs, ropensci, events) %>%
api_write(ff <- tempfile())
readLines(ff)
ff
ff <- tempfile()
api('api.github.com') %>%
api_path(orgs, ropensci, events) %>%
api_write(ff)
readLines(ff)
invisible(elastic::connect())
if (!index_exists("mtcars")) {
invisible(docs_bulk(mtcars, "mtcars") )
}
rmarkdown::render("elastic-dashboard.Rmd")
rmarkdown::run("elastic-dashboard.Rmd")
rmarkdown::run("elastic-dashboard.Rmd")
library("elastic")
library(elastic)
connect()
connect(errors = "complete")
Search(index = "asdfasdfsdfsa")
ping()
cat_indices()
head*
head(cat_indices())
index_exists("shakespeare")
index_delete("shakespeare")
shakespeare <- system.file("examples", "shakespeare_data.json", package = "elastic")
shakespeare
invisible(
docs_bulk(shakespeare)
)
res <- Search(index = "shakespeare")
res
class(res)
res$took
res$timed_out
res$`_shards`
res$hits
res$hits$total
res$hits$max_score
library('data.table')
hits <- res$hits$hits
hits
src <- lapply(hits, "[[", "_source")
src <- lapply(hits, "[[", "_source")
src
`[[`
`[`
data.table::rbindlist(src)
data.table::rbindlist(src)
Search_uri(index="shakespeare", q="*ay")$hits$total
Search_uri(index="shakespeare", q="*ay", config = httr::verbose())
Search(index="shakespeare", fields=c('play_name','speaker'))$hits$hits[[1]]
Search(index="shakespeare", type="act", sort="text_entry")$hits$hits[1:2]
Search(index="shakespeare", size=1, from=1, fields='text_entry')$hits
Search(index="shakespeare", type="act", q="speaker:KING HENRY IV")$hits$total
aggs <- '{
"aggs": {
"latbuckets" : {
"histogram" : {
"field" : "decimalLatitude",
"interval" : 5
}
}
}
}'
res <- Search(index="gbif", body=aggs, size=0)
res
res$aggregations$latbuckets$buckets
res <- res$aggregations$latbuckets$buckets
res
df <- data.table::setDF(data.table::rbindlist(res))
df
library(ggplot2)
ggplot(df, aes(key, doc_count)) + geom_line(size = 3) + theme_grey(20)
httr::httr_options()
library(elasticdsl)
elastic::connect()
indices()
index("mtcars")
index("omdb")
index("shakespeare")
index("shakespeare", "scene")
index("shakespeare") %>% query("prefix", speaker = "we")
res <- index("shakespeare") %>% query("prefix", speaker = "we")
vapply(res$hits$hits, "[[", "", c('_source', 'speaker'))
res <- index("shakespeare") %>% prefix(speaker = "we")
vapply(res$hits$hits, "[[", "", c('_source', 'speaker'))
index("shakespeare") %>%
from(1)
index("shakespeare") %>%
from(1) %>%
size(5)
index("shakespeare") %>%
size(5) %>%
n()
index("shakespeare") %>%
prefix(speaker = "we") %>%
describe()
index("shakespeare") %>% ids(1, 2, 150)
index("shakespeare") %>% ids(1, 2, 150) %>% hits()
index("shakespeare") %>%
prefix(speaker = "we") %>%
size(50) %>%
tabl()
rmarkdown::run("elastic-dashboard.Rmd")
rmarkdown::run("elastic-dashboard.Rmd")
index_create(mtcars, "mtcars")
elastic::connect()
library(elastic)
rmarkdown::run("elastic-dashboard.Rmd")
library(elastic)
library(dplyr)
library(leaflet)
elastic::connect()
make_viz <- function(x) {
leaflet() %>%
addProviderTiles("Stamen.Toner") %>%
addMarkers(data = x)
}
make_df <- function(x) {
tbl_df(do.call(rbind, lapply(x$hits$hits, function(x) data.frame(x$`_source`$location))))
}
out <- Search('gbifgeopoint', size = 1000)
out$hits$total
(dat <- make_df(out))
bbox <- '{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"color":"blue"},"geometry":{"type":"Polygon","coordinates":[[[-4,31],[-4,69],[29,69],[29,31],[-4,31]]]}}]}'
make_viz(dat)
make_viz(dat) %>% addGeoJSON(geojson = bbox)
body <- '{
"query":{
"bool" : {
"must" : {
"match_all" : {}
},
"filter":{
"geo_bounding_box" : {
"location" : {
"top_left" : {
"lat" : 60,
"lon" : 1
},
"bottom_right" : {
"lat" : 40,
"lon" : 14
}
}
}
}
}
}
}'
out <- Search('gbifgeopoint', body = body, size = 500)
out$hits$total
dat <- make_df(out)
dat
bbox <- '{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"color":"blue"},"geometry":{"type":"Polygon","coordinates":[[[1,40],[1,60],[14,60],[14,40],[1,40]]]}}]}'
make_viz(dat)
make_viz(dat) %>% addGeoJSON(geojson = bbox)
body <- '{
"query":{
"bool" : {
"must" : {
"match_all" : {}
},
"filter":{
"geo_polygon" : {
"location" : {
"points" : [
[ 0, 55 ], [ 13, 56 ], [ 17, 50 ], [ 7, 42 ], [ 0, 55 ]
]
}
}
}
}
}
}'
out <- Search('gbifgeopoint', body = body, size = 500)
out$hits$total
(dat <- make_df(out))
bounds <- '{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"color":"blue"},"geometry":{"type":"Polygon","coordinates":[[[0,55],[13,56],[17,50],[7,42],[0,55]]]}}]}'
make_viz(dat) %>% addGeoJSON(geojson = bounds)
